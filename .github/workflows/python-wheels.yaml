# This file is autogenerated by maturin v1.7.1
# To update, run
#
#    maturin generate-ci github --platform manylinux macos
#
name: CI

on:
    push:
        branches: [main, master]
        tags: ["*"]
        paths:
            - "fish_speech_core/**"
            - "fish_speech_python/**"
            - "candle-gqa-kernels/**"
            - "Cargo.lock"
            - "Cargo.toml"
            - ".github/workflows/python-wheels.yml"
    pull_request:
        paths:
            - "fish_speech_core/**"
            - "fish_speech_python/**"
            - "candle-gqa-kernels/**"
            - "Cargo.lock"
            - "Cargo.toml"
            - ".github/workflows/python-wheels.yml"
    workflow_dispatch:

permissions:
    contents: write

jobs:
    linux-cuda:
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.9"
            - uses: Jimver/cuda-toolkit@v0.2.21
              id: cuda-toolkit
              with:
                  cuda: "12.6.0"

            - run: |
                  echo "Installed cuda version is: ${{steps.cuda-toolkit.outputs.cuda}}"
            - run: |
                  echo "Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"
            - run: nvcc -V
            - uses: PyO3/maturin-action@v1
              env:
                  # Must be set or bindgen-cuda will look for nvidia-smi which will never work
                  # https://github.com/huggingface/candle/issues/1516
                  CUDA_COMPUTE_CAP: "80"
              with:
                  target: x86_64
                  args: --release --out dist --find-interpreter --manifest-path fish_speech_python/Cargo.toml --features cuda
                  manylinux: off # Yes this is terrible, but I need the compiler to see nvcc
            - name: Fix Manylinux Compliance
              run: |
                  pip install auditwheel
                  auditwheel repair dist/*.whl --plat manylinux_2_31 -w dist/

            - uses: actions/upload-artifact@v4
              with:
                  name: wheels-linux-cuda
                  path: dist

    macos-arm:
        runs-on: macos-14
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: "3.9"
            - uses: PyO3/maturin-action@v1
              with:
                  target: aarch64
                  args: --release --out dist --find-interpreter --manifest-path fish_speech_python/Cargo.toml --features metal
            - uses: actions/upload-artifact@v4
              with:
                  name: wheels-macos-arm64
                  path: dist

    release:
        if: startsWith(github.ref, 'refs/tags/')
        needs: [linux-cuda, macos-arm]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      wheels-linux-cuda/*
                      wheels-macos-arm64/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

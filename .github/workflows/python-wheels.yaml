# This file is autogenerated by maturin v1.7.1
# To update, run
#
#    maturin generate-ci github --platform manylinux macos
#
name: CI

on:
    push:
        branches: [main, master]
        tags: ["*"]
        paths:
            - "fish_speech_core/**"
            - "fish_speech_python/**"
            - "candle-gqa-kernels/**"
            - "Cargo.lock"
            - "Cargo.toml"
            - ".github/workflows/python-wheels.yml" # or whatever you name this file
    pull_request:
        paths:
            - "fish_speech_core/**"
            - "fish_speech_python/**"
            - "candle-gqa-kernels/**"
            - "Cargo.lock"
            - "Cargo.toml"
            - ".github/workflows/python-wheels.yml"

permissions:
    contents: read

jobs:
    linux-cuda:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - uses: Jimver/cuda-toolkit@v0.2.14
              with:
                  cuda: "12.1.0" # Just pick one recent version
            - uses: PyO3/maturin-action@v1
              with:
                  target: x86_64
                  args: --release --out dist --find-interpreter --manifest-path fish_speech_python/Cargo.toml
                  manylinux: auto
            - uses: actions/upload-artifact@v4
              with:
                  name: wheels-linux-cuda
                  path: dist

    macos-arm:
        runs-on: macos-14
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - uses: PyO3/maturin-action@v1
              with:
                  target: aarch64
                  args: --release --out dist --find-interpreter --manifest-path fish_speech_python/Cargo.toml
            - uses: actions/upload-artifact@v4
              with:
                  name: wheels-macos-arm64
                  path: dist

    release:
        if: startsWith(github.ref, 'refs/tags/')
        needs: [linux-cuda, macos-arm]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
            - uses: PyO3/maturin-action@v1
              env:
                  MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              with:
                  command: upload
                  args: --non-interactive --skip-existing wheels-*/*
